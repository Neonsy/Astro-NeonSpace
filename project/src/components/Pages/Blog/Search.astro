---
// src/components/Search.astro
interface Post {
  slug: string;
  title: string;
  description: string;
  tags?: string[];
}

const { initialPosts }: { initialPosts: Post[] } = Astro.props;
---

<div class="search-container">
  <form id="searchForm" action="/blog" method="GET" class="mb-8">
    <input
      type="search"
      name="q"
      placeholder="Search posts..."
      class="w-full p-2 border rounded"
      value={Astro.url.searchParams.get('q') || ''}
    />
  </form>

  <div id="searchResults" class="grid grid-cols-1 md:grid-cols-3 gap-4">
    {initialPosts.map(post => (
      <article class="border p-4 rounded-lg">
        <h2 class="text-xl font-bold">{post.title}</h2>
        <p class="text-gray-600 mt-2">{post.description}</p>
        {post.tags && (
          <div class="mt-2">
            {post.tags.map(tag => (
              <span class="inline-block bg-gray-100 px-2 py-1 text-sm rounded mr-2">
                {tag}
              </span>
            ))}
          </div>
        )}
        <a href={`/blog/${post.slug}`} class="mt-4 inline-block text-blue-500">
          Read more →
        </a>
      </article>
    ))}
  </div>

  <script>
    let timeoutId: NodeJS.Timeout;
    const searchForm = document.getElementById('searchForm') as HTMLFormElement;
    const searchInput = searchForm.querySelector('input[name="q"]') as HTMLInputElement;
    const searchResults = document.getElementById('searchResults') as HTMLDivElement;

    async function performSearch(query: string): Promise<void> {
      try {
        const response = await fetch(`/api/search?q=${encodeURIComponent(query)}`);
        
        if (!response.ok) throw new Error('Search failed');
        
        const results: Post[] = await response.json();

        searchResults.innerHTML = results.map(post => `
          <article class="border p-4 rounded-lg">
            <h2 class="text-xl font-bold">${post.title}</h2>
            <p class="text-gray-600 mt-2">${post.description}</p>
            ${post.tags ? `
              <div class="mt-2">
                ${post.tags.map(tag => `
                  <span class="inline-block bg-gray-100 px-2 py-1 text-sm rounded mr-2">
                    ${tag}
                  </span>
                `).join('')}
              </div>
            ` : ''}
            <a href="/blog/${post.slug}" class="mt-4 inline-block text-blue-500">
              Read more →
            </a>
          </article>
        `).join('');
      } catch (error) {
        console.error('Search failed:', error);
        searchResults.innerHTML = `
          <div class="text-red-500 p-4 border rounded">
            Error loading results. Please try again.
          </div>
        `;
      }
    }

    searchInput.addEventListener('input', (e: Event) => {
      const target = e.target as HTMLInputElement;
      clearTimeout(timeoutId);
      timeoutId = setTimeout(() => {
        performSearch(target.value);
      }, 500);
    });
  </script>
</div>
