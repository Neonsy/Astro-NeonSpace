name: Vercel PR Deployments

on:
  issue_comment:
    types: [created]

concurrency:
  group: deploy-${{ github.event.issue.number }}
  cancel-in-progress: true

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:
  deploy:
    if: >-
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/deploy')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Get PR Details
        id: pr-info
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            // Parse command arguments
            const commentBody = context.payload.comment.body;
            const skipMigrations = commentBody.includes('--skip-migrations=true');

            return {
              ref: data.head.ref,
              sha: data.head.sha,
              number: context.issue.number,
              isOpen: data.state === 'open',
              skipMigrations: skipMigrations
            };

      - name: Validate PR State
        if: ${{ !fromJSON(steps.pr-info.outputs.result).isOpen }}
        run: exit 1

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ fromJSON(steps.pr-info.outputs.result).sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: 'project/.node-version'
          cache: 'pnpm'
          cache-dependency-path: 'project/pnpm-lock.yaml'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Vercel
        run: |
          pnpm add -g vercel@latest
          vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Run Migrations
        if: ${{ !fromJSON(steps.pr-info.outputs.result).skipMigrations }}
        run: pnpm db:migrate

      - name: Build and Deploy
        id: deploy
        run: |
          vercel build --token=$VERCEL_TOKEN
          DEPLOY_URL=$(vercel deploy --prebuilt --token=$VERCEL_TOKEN)
          echo "url=$DEPLOY_URL" >> $GITHUB_OUTPUT
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Post Deployment Link
        uses: actions/github-script@v7
        with:
          script: |
            const { number, sha, skipMigrations } = ${{ steps.pr-info.outputs.result }};
            const migrationStatus = skipMigrations ? 'Skipped' : 'Executed';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: number,
              body: `ðŸš€ Deployment Successful!\n\n` +
                    `**Preview URL:** ${process.env.DEPLOY_URL}\n` +
                    `**Commit:** \`${sha.slice(0,7)}\`\n` +
                    `**Migrations:** ${migrationStatus}\n` +
                    `[Vercel Dashboard](https://vercel.com/${process.env.VERCEL_ORG_ID}/${process.env.VERCEL_PROJECT_ID})`
            })
        env:
          DEPLOY_URL: ${{ steps.deploy.outputs.url }}
