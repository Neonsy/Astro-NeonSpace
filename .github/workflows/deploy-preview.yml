name: Deploy Preview
on:
    pull_request:
        branches: Preview
        types: [opened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

env:
    NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

jobs:
    deploy:
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: ./project


        steps:
            - name: Wait for Main CI/CD
              uses: fountainhead/action-wait-for-check@v1.2.0
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  checkName: signal-build-can-start
                  intervalSeconds: 60
                  timeoutSeconds: 600
                  ref: ${{ github.event.pull_request.head.sha }}

            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Get Commit Name
              id: get-commit-name
              run: |
                  # Get the second-to-last commit name
                  commit_name=$(git log -2 --pretty=format:'%s' | tail -n 1)
                  echo "Raw commit name (no sed): $commit_name"

                  # Set the commit name as an output (using the raw commit name)
                  echo "commit_name=$commit_name" >> $GITHUB_OUTPUT

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 'latest'

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: '/project/.node-version'
                  cache: 'pnpm'
                  cache-dependency-path: 'project/pnpm-lock.yaml'

            - name: Install Netlify CLI via project dependencies
              run: pnpm install --frozen-lockfile

           - name: Fetch Netlify env vars
             run: |
               echo "ASTRO_DB_REMOTE_URL=$(netlify env:get ASTRO_DB_REMOTE_URL)" >> $GITHUB_ENV

           - name: Debug env var
             run: |
               # Will show as "libsql://***" for security
               echo "DB URL prefix: $(echo $ASTRO_DB_REMOTE_URL | cut -d'@' -f1)"
               echo "Variable is set: ${ASTRO_DB_REMOTE_URL:+yes}"
               echo "Variable length: ${#ASTRO_DB_REMOTE_URL}"

            - name: Build the project
              run: pnpm netlify build --context deploy-preview

            - name: Deploy to Netlify
              id: netlify-deploy
              run: |
                  # Deploy to Netlify and capture the output
                  output=$(pnpm netlify deploy --message "${{ steps.get-commit-name.outputs.commit_name }}")
                  echo "$output"

                  # Extract the preview URL from the output
                  preview_url=$(echo "$output" | grep -oP 'https://.*\.netlify\.app')
                  echo "Preview URL: $preview_url"

                  # Set the preview URL as an output
                  echo "preview_url=$preview_url" >> $GITHUB_OUTPUT

            - name: Comment on Pull Request
              uses: actions/github-script@v6
              with:
                  script: |
                      const previewUrl = '${{ steps.netlify-deploy.outputs.preview_url }}';
                      const commitSha = context.payload.pull_request.head.sha.substring(0, 7);
                      const inspectUrl = `https://app.netlify.com/sites/${process.env.NETLIFY_SITE_ID}/deploys`;

                      if (!previewUrl) {
                          throw new Error('Preview URL not found.');
                      }

                      const body = `## 🚀 Netlify Preview Deployment

                      ### Build Information
                      > **Status:** ✅ Success  
                      > **Commit:** \`${commitSha}\`

                      ### Deployment Links
                      | Type | Link |
                      |:--|:--|
                      | ✨ **Preview** | [See your changes in action!](${previewUrl}) |
                      | 🔍 **Inspect** | [Peek under the hood](${inspectUrl}) |

                      ---
                      ### 💫 Deployed through GitHub Actions 😎`;

                      await github.rest.issues.createComment({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: context.payload.pull_request.number,
                          body: body
                      });
