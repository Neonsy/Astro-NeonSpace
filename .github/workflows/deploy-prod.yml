name: Deploy Production
on:
    pull_request:
        branches: main
        types: [opened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Wait for Main CI/CD
              uses: fountainhead/action-wait-for-check@v1.2.0
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  checkName: signal-build-can-start
                  intervalSeconds: 60
                  timeoutSeconds: 600
                  ref: ${{ github.event.pull_request.head.sha }}

            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Get Commit Name
              id: get-commit-name
              run: |
                  # Get the second-to-last commit name
                  commit_name=$(git log -2 --pretty=format:'%s' | tail -n 1)
                  echo "Raw commit name (no sed): $commit_name"

                  # Set the commit name as an output (using the raw commit name)
                  echo "commit_name=$commit_name" >> $GITHUB_OUTPUT

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 'latest'

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: '/project/.node-version'
                  cache: 'pnpm'
                  cache-dependency-path: 'project/pnpm-lock.yaml'

            - name: Install Netlify CLI via project dependencies
              run: pnpm i

            - name: Build the project
              run: pnpm netlify build

            - name: Deploy to Netlify
              run: pnpm netlify deploy --prod --message "${{ steps.get-commit-name.outputs.commit_name }}"

            - name: Label PR for Main
              if: github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'Preview'
              uses: buildsville/add-remove-label@v2.0.1
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  labels: Deployed
                  type: add
