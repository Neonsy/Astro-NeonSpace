name: Dev PR
on:
    pull_request:
        types: [opened, reopened, synchronize]
        branches:
            - Dev

# Add concurrency control
concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

permissions:
    contents: write
    pull-requests: write

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version-file: '/project/.node-version'
                  cache: 'pnpm'
                  cache-dependency-path: 'project/pnpm-lock.yaml'

            - name: Install dependencies
              working-directory: ./project
              run: pnpm install

            - name: Build
              working-directory: ./project
              run: pnpm build:check

    dependabot:
        name: 'Dependabot'
        needs: [build]
        runs-on: ubuntu-latest
        permissions: # Add required permissions
            pull-requests: write
            contents: write
        if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
        steps:
            - name: Enable auto-merge for Dependabot PRs
              run: |
                  # First approve the PR (required for auto-merge)
                  gh pr review --approve "$PR_URL"
                  
                  # Try merge strategies in order
                  if ! gh pr merge --merge "$PR_URL" --delete-branch; then
                    echo "Regular merge failed, attempting rebase..."
                    if ! gh pr merge --rebase "$PR_URL" --delete-branch; then
                      echo "Rebase failed, attempting squash..."
                      gh pr merge --squash "$PR_URL" --delete-branch
                    fi
                  fi
              env:
                  PR_URL: ${{github.event.pull_request.html_url}}
                  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}